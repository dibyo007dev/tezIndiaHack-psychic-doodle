parameter (or (or (pair %approve (address %approve_to) (string %token_id)) (string %burnDataToken)) (or (pair %mintDataToken (address %address) (string %token_id)) (or (pair %transfer (address %to) (string %token_id)) (pair %transferFrom (address %f) (pair (address %t) (string %token_id))))));
storage   (pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            # Entry point: approve # @parameter%approve : @storage
            # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%approve : @storage
            SWAP;       # @storage : @parameter%approve
            DUP;        # @storage : @storage : @parameter%approve
            DUG 2;      # @storage : @parameter%approve : @storage
            CDDDR;      # set string : @parameter%approve : @storage
            SWAP;       # @parameter%approve : set string : @storage
            DUP;        # @parameter%approve : @parameter%approve : set string : @storage
            DUG 2;      # @parameter%approve : set string : @parameter%approve : @storage
            CDR;        # string : set string : @parameter%approve : @storage
            MEM;        # bool : @parameter%approve : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%approve : @storage
                FAILWITH;   # FAILED
              }; # @parameter%approve : @storage
            # sp.verify(sp.sender == self.data.tokenIdToOwner[params.token_id]) # @parameter%approve : @storage
            SWAP;       # @storage : @parameter%approve
            DUP;        # @storage : @storage : @parameter%approve
            DUG 2;      # @storage : @parameter%approve : @storage
            CDDAR;      # big_map string address : @parameter%approve : @storage
            SWAP;       # @parameter%approve : big_map string address : @storage
            DUP;        # @parameter%approve : @parameter%approve : big_map string address : @storage
            DUG 2;      # @parameter%approve : big_map string address : @parameter%approve : @storage
            CDR;        # string : big_map string address : @parameter%approve : @storage
            GET;        # option address : @parameter%approve : @storage
            IF_SOME
              {
                # of_some: Get-item:65 # @some : @parameter%approve : @storage
              }
              {
                PUSH string "Get-item:65"; # string : @parameter%approve : @storage
                FAILWITH;   # FAILED
              }; # @some : @parameter%approve : @storage
            SENDER;     # address : @some : @parameter%approve : @storage
            COMPARE;    # int : @parameter%approve : @storage
            EQ;         # bool : @parameter%approve : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: sp.sender == self.data.tokenIdToOwner[params.token_id]"; # string : @parameter%approve : @storage
                FAILWITH;   # FAILED
              }; # @parameter%approve : @storage
            # self.data.tokenApprovals[params.token_id] = params.approve_to # @parameter%approve : @storage
            SWAP;       # @storage : @parameter%approve
            DUP;        # @storage : @storage : @parameter%approve
            DUG 2;      # @storage : @parameter%approve : @storage
            DUP;        # @storage : @storage : @parameter%approve : @storage
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage : @parameter%approve : @storage
            SWAP;       # @storage : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            DUP;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CDR;        # big_map address (set string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CAR;        # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            DIG 4;      # @parameter%approve : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUP;        # @parameter%approve : @parameter%approve : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUG 5;      # @parameter%approve : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CAR;        # address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            SOME;       # option address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            DIG 5;      # @parameter%approve : option address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUP;        # @parameter%approve : @parameter%approve : option address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUG 6;      # @parameter%approve : option address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            CDR;        # string : option address : big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            UPDATE;     # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%approve : @storage
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%approve : @storage
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%approve : @storage
            DUG 2;      # @parameter%approve : @storage : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
            DROP 2;     # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
          }
          {
            # Entry point: burnDataToken # @parameter%burnDataToken : @storage
            # sp.verify(sp.sender == self.data.admin) # @parameter%burnDataToken : @storage
            SWAP;       # @storage : @parameter%burnDataToken
            DUP;        # @storage : @storage : @parameter%burnDataToken
            DUG 2;      # @storage : @parameter%burnDataToken : @storage
            CAAAR;      # address : @parameter%burnDataToken : @storage
            SENDER;     # address : address : @parameter%burnDataToken : @storage
            COMPARE;    # int : @parameter%burnDataToken : @storage
            EQ;         # bool : @parameter%burnDataToken : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%burnDataToken : @storage
                FAILWITH;   # FAILED
              }; # @parameter%burnDataToken : @storage
            # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%burnDataToken : @storage
            SWAP;       # @storage : @parameter%burnDataToken
            DUP;        # @storage : @storage : @parameter%burnDataToken
            DUG 2;      # @storage : @parameter%burnDataToken : @storage
            CDDDR;      # set string : @parameter%burnDataToken : @storage
            SWAP;       # @parameter%burnDataToken : set string : @storage
            DUP;        # @parameter%burnDataToken : @parameter%burnDataToken : set string : @storage
            DUG 2;      # @parameter%burnDataToken : set string : @parameter%burnDataToken : @storage
            MEM;        # bool : @parameter%burnDataToken : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%burnDataToken : @storage
                FAILWITH;   # FAILED
              }; # @parameter%burnDataToken : @storage
            # self.data.tokensMinted.remove(params.token_id) # @parameter%burnDataToken : @storage
            SWAP;       # @storage : @parameter%burnDataToken
            DUP;        # @storage : @storage : @parameter%burnDataToken
            DUG 2;      # @storage : @parameter%burnDataToken : @storage
            DUP;        # @storage : @storage : @parameter%burnDataToken : @storage
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage : @parameter%burnDataToken : @storage
            SWAP;       # @storage : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            CDR;        # set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            PUSH bool False; # bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            DIG 5;      # @parameter%burnDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUP;        # @parameter%burnDataToken : @parameter%burnDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUG 6;      # @parameter%burnDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            UPDATE;     # set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            SWAP;       # big_map string address : set string : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            PAIR;       # pair (big_map string address) (set string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            PAIR;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%burnDataToken : @storage
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : @parameter%burnDataToken : @storage
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%burnDataToken : @storage
            DUG 2;      # @parameter%burnDataToken : @storage : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DROP 2;     # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
          }; # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
      }
      {
        IF_LEFT
          {
            # Entry point: mintDataToken # @parameter%mintDataToken : @storage
            # sp.verify(sp.sender == self.data.admin) # @parameter%mintDataToken : @storage
            SWAP;       # @storage : @parameter%mintDataToken
            DUP;        # @storage : @storage : @parameter%mintDataToken
            DUG 2;      # @storage : @parameter%mintDataToken : @storage
            CAAAR;      # address : @parameter%mintDataToken : @storage
            SENDER;     # address : address : @parameter%mintDataToken : @storage
            COMPARE;    # int : @parameter%mintDataToken : @storage
            EQ;         # bool : @parameter%mintDataToken : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%mintDataToken : @storage
                FAILWITH;   # FAILED
              }; # @parameter%mintDataToken : @storage
            # sp.verify(~ (self.data.tokensMinted.contains(params.token_id))) # @parameter%mintDataToken : @storage
            SWAP;       # @storage : @parameter%mintDataToken
            DUP;        # @storage : @storage : @parameter%mintDataToken
            DUG 2;      # @storage : @parameter%mintDataToken : @storage
            CDDDR;      # set string : @parameter%mintDataToken : @storage
            SWAP;       # @parameter%mintDataToken : set string : @storage
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : set string : @storage
            DUG 2;      # @parameter%mintDataToken : set string : @parameter%mintDataToken : @storage
            CDR;        # string : set string : @parameter%mintDataToken : @storage
            MEM;        # bool : @parameter%mintDataToken : @storage
            IF
              {
                PUSH string "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))"; # string : @parameter%mintDataToken : @storage
                FAILWITH;   # FAILED
              }
              {}; # @parameter%mintDataToken : @storage
            # self.data.tokensMinted.add(params.token_id) # @parameter%mintDataToken : @storage
            SWAP;       # @storage : @parameter%mintDataToken
            DUP;        # @storage : @storage : @parameter%mintDataToken
            DUG 2;      # @storage : @parameter%mintDataToken : @storage
            DUP;        # @storage : @storage : @parameter%mintDataToken : @storage
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage : @parameter%mintDataToken : @storage
            SWAP;       # @storage : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CDR;        # set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            PUSH bool True; # bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            DIG 5;      # @parameter%mintDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
            DUG 6;      # @parameter%mintDataToken : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            CDR;        # string : bool : set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            UPDATE;     # set string : big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            SWAP;       # big_map string address : set string : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            PAIR;       # pair (big_map string address) (set string) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            PAIR;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : @storage
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : @storage
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : @storage
            DUG 2;      # @parameter%mintDataToken : @storage : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # @storage : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DROP;       # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CADAR;      # big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # @parameter%mintDataToken : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # @parameter%mintDataToken : big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            MEM;        # bool : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            IF
              {}
              {
                # self.data.tokenHolderToID[params.address] = sp.set([]) # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map string address) (set string) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CDR;        # big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DIG 5;      # @parameter%mintDataToken : option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUG 6;      # @parameter%mintDataToken : option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # big_map string address : big_map address (set string) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
              }; # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            # self.data.tokenHolderToID[params.address].add(params.token_id) # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (big_map string address) (set string) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CAR;        # big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CDR;        # big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DIG 5;      # @parameter%mintDataToken : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUG 6;      # @parameter%mintDataToken : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # address : address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            GET;        # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            IF_SOME
              {
                # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
              }
              {
                PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            PUSH bool True; # bool : @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DIG 7;      # @parameter%mintDataToken : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUG 8;      # @parameter%mintDataToken : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            CDR;        # string : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            UPDATE;     # set string : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SOME;       # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            UPDATE;     # big_map address (set string) : big_map string address : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # big_map string address : big_map address (set string) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DROP;       # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            # self.data.tokenIdToOwner[params.token_id] = params.address # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (big_map string address) (big_map address (set string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # set string : pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (big_map string address) (set string) : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DIG 4;      # @parameter%mintDataToken : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 5;      # @parameter%mintDataToken : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SOME;       # option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DIG 5;      # @parameter%mintDataToken : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 6;      # @parameter%mintDataToken : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # string : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            UPDATE;     # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DROP;       # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CADAR;      # big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # @parameter%mintDataToken : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # @parameter%mintDataToken : big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : big_map address int : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            MEM;        # bool : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            IF
              {}
              {
                # self.data.ownerToBalance[params.address] = 0 # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # string : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map %ownerToBalance address int) (string %symbol) : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PUSH (option int) (Some 0); # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 5;      # @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 6;      # @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
              }; # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            # self.data.ownerToBalance[params.address] += 1 # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken
            DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CDR;        # string : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (big_map %ownerToBalance address int) (string %symbol) : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PUSH int 1; # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DIG 6;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken
            DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken
            DUG 7;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CADAR;      # big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DIG 6;      # @parameter%mintDataToken : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 7;      # @parameter%mintDataToken : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            GET;        # option int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            IF_SOME
              {
                # of_some: Get-item:37 # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
              }
              {
                PUSH string "Get-item:37"; # string : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                FAILWITH;   # FAILED
              }; # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            ADD;        # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SOME;       # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DIG 5;      # @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUP;        # @parameter%mintDataToken : @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 6;      # @parameter%mintDataToken : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            CAR;        # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DUG 2;      # @parameter%mintDataToken : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
            DROP 2;     # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
          }
          {
            IF_LEFT
              {
                # Entry point: transfer # @parameter%transfer : @storage
                # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%transfer : @storage
                SWAP;       # @storage : @parameter%transfer
                DUP;        # @storage : @storage : @parameter%transfer
                DUG 2;      # @storage : @parameter%transfer : @storage
                CDDDR;      # set string : @parameter%transfer : @storage
                SWAP;       # @parameter%transfer : set string : @storage
                DUP;        # @parameter%transfer : @parameter%transfer : set string : @storage
                DUG 2;      # @parameter%transfer : set string : @parameter%transfer : @storage
                CDR;        # string : set string : @parameter%transfer : @storage
                MEM;        # bool : @parameter%transfer : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%transfer : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transfer : @storage
                # sp.verify(self.data.tokenIdToOwner[params.token_id] == sp.sender) # @parameter%transfer : @storage
                SENDER;     # address : @parameter%transfer : @storage
                DIG 2;      # @storage : address : @parameter%transfer
                DUP;        # @storage : @storage : address : @parameter%transfer
                DUG 3;      # @storage : address : @parameter%transfer : @storage
                CDDAR;      # big_map string address : address : @parameter%transfer : @storage
                DIG 2;      # @parameter%transfer : big_map string address : address : @storage
                DUP;        # @parameter%transfer : @parameter%transfer : big_map string address : address : @storage
                DUG 3;      # @parameter%transfer : big_map string address : address : @parameter%transfer : @storage
                CDR;        # string : big_map string address : address : @parameter%transfer : @storage
                GET;        # option address : address : @parameter%transfer : @storage
                IF_SOME
                  {
                    # of_some: Get-item:57 # @some : address : @parameter%transfer : @storage
                  }
                  {
                    PUSH string "Get-item:57"; # string : address : @parameter%transfer : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : @parameter%transfer : @storage
                COMPARE;    # int : @parameter%transfer : @storage
                EQ;         # bool : @parameter%transfer : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: self.data.tokenIdToOwner[params.token_id] == sp.sender"; # string : @parameter%transfer : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transfer : @storage
                # self.data.tokenHolderToID[sp.sender].remove(params.token_id) # @parameter%transfer : @storage
                SWAP;       # @storage : @parameter%transfer
                DUP;        # @storage : @storage : @parameter%transfer
                DUG 2;      # @storage : @parameter%transfer : @storage
                DUP;        # @storage : @storage : @parameter%transfer : @storage
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage : @parameter%transfer : @storage
                SWAP;       # @storage : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DUP;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CAR;        # big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DUP;        # big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SENDER;     # address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DUP;        # address : address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                GET;        # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                IF_SOME
                  {
                    # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                  }
                  {
                    PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                PUSH bool False; # bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                DIG 7;      # @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUP;        # @parameter%transfer : @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUG 8;      # @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                CDR;        # string : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                UPDATE;     # set string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SOME;       # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SWAP;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : @storage
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transfer : @storage
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : @storage
                DUG 2;      # @parameter%transfer : @storage : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # @storage : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # if ~ (self.data.ownerToBalance.contains(params.to)): # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CADAR;      # big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # @parameter%transfer : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transfer : big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # address : big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                MEM;        # bool : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                IF
                  {}
                  {
                    # self.data.tokenHolderToID[params.to] = sp.set([]) # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                    DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # big_map string address : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (big_map string address) (big_map address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DIG 5;      # @parameter%transfer : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # @parameter%transfer : @parameter%transfer : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUG 6;      # @parameter%transfer : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                  }; # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # self.data.tokenHolderToID[params.to].add(params.token_id) # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # big_map string address : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map string address) (big_map address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 5;      # @parameter%transfer : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 6;      # @parameter%transfer : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # address : address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                GET;        # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                IF_SOME
                  {
                    # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                  }
                  {
                    PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    FAILWITH;   # FAILED
                  }; # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PUSH bool True; # bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 7;      # @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transfer : @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 8;      # @parameter%transfer : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # string : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # set string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SOME;       # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # self.data.tokenIdToOwner[params.token_id] = params.to # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (big_map string address) (big_map address (set string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # set string : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 4;      # @parameter%transfer : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 5;      # @parameter%transfer : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SOME;       # option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 5;      # @parameter%transfer : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transfer : @parameter%transfer : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 6;      # @parameter%transfer : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # string : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # self.data.ownerToBalance[sp.sender] -= 1 # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # string : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map %ownerToBalance address int) (string %symbol) : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PUSH int 1; # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer
                DUG 7;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SENDER;     # address : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                GET;        # option int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF_SOME
                  {
                    # of_some: Get-item:-1 # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }
                  {
                    PUSH string "Get-item:-1"; # string : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    FAILWITH;   # FAILED
                  }; # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SUB;        # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SOME;       # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SENDER;     # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # if ~ (self.data.ownerToBalance.contains(params.to)): # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # @parameter%transfer : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transfer : big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : big_map address int : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                MEM;        # bool : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF
                  {}
                  {
                    # self.data.ownerToBalance[params.to] = 0 # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                    DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (big_map address int) string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (big_map address int) string : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PUSH (option int) (Some 0); # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DIG 5;      # @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # @parameter%transfer : @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUG 6;      # @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DROP;       # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }; # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # self.data.ownerToBalance[params.to] += 1 # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map address int) string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map address int) string : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PUSH int 1; # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer
                DUG 7;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # @parameter%transfer : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transfer : @parameter%transfer : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 7;      # @parameter%transfer : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                GET;        # option int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF_SOME
                  {
                    # of_some: Get-item:59 # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }
                  {
                    PUSH string "Get-item:59"; # string : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    FAILWITH;   # FAILED
                  }; # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                ADD;        # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SOME;       # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 5;      # @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transfer : @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 6;      # @parameter%transfer : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transfer : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP 2;     # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
              }
              {
                # Entry point: transferFrom # @parameter%transferFrom : @storage
                # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%transferFrom : @storage
                SWAP;       # @storage : @parameter%transferFrom
                DUP;        # @storage : @storage : @parameter%transferFrom
                DUG 2;      # @storage : @parameter%transferFrom : @storage
                CDDDR;      # set string : @parameter%transferFrom : @storage
                SWAP;       # @parameter%transferFrom : set string : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : set string : @storage
                DUG 2;      # @parameter%transferFrom : set string : @parameter%transferFrom : @storage
                CDDR;       # string : set string : @parameter%transferFrom : @storage
                MEM;        # bool : @parameter%transferFrom : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transferFrom : @storage
                # sp.verify(params.f == self.data.tokenIdToOwner[params.token_id]) # @parameter%transferFrom : @storage
                SWAP;       # @storage : @parameter%transferFrom
                DUP;        # @storage : @storage : @parameter%transferFrom
                DUG 2;      # @storage : @parameter%transferFrom : @storage
                CDDAR;      # big_map string address : @parameter%transferFrom : @storage
                SWAP;       # @parameter%transferFrom : big_map string address : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map string address : @storage
                DUG 2;      # @parameter%transferFrom : big_map string address : @parameter%transferFrom : @storage
                CDDR;       # string : big_map string address : @parameter%transferFrom : @storage
                GET;        # option address : @parameter%transferFrom : @storage
                IF_SOME
                  {
                    # of_some: Get-item:74 # @some : @parameter%transferFrom : @storage
                  }
                  {
                    PUSH string "Get-item:74"; # string : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%transferFrom : @storage
                SWAP;       # @parameter%transferFrom : @some : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : @some : @storage
                DUG 2;      # @parameter%transferFrom : @some : @parameter%transferFrom : @storage
                CAR;        # address : @some : @parameter%transferFrom : @storage
                COMPARE;    # int : @parameter%transferFrom : @storage
                EQ;         # bool : @parameter%transferFrom : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: params.f == self.data.tokenIdToOwner[params.token_id]"; # string : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transferFrom : @storage
                # sp.verify(sp.sender == self.data.tokenApprovals[params.token_id]) # @parameter%transferFrom : @storage
                SWAP;       # @storage : @parameter%transferFrom
                DUP;        # @storage : @storage : @parameter%transferFrom
                DUG 2;      # @storage : @parameter%transferFrom : @storage
                CDAAR;      # big_map string address : @parameter%transferFrom : @storage
                SWAP;       # @parameter%transferFrom : big_map string address : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map string address : @storage
                DUG 2;      # @parameter%transferFrom : big_map string address : @parameter%transferFrom : @storage
                CDDR;       # string : big_map string address : @parameter%transferFrom : @storage
                GET;        # option address : @parameter%transferFrom : @storage
                IF_SOME
                  {
                    # of_some: Get-item:74 # @some : @parameter%transferFrom : @storage
                  }
                  {
                    PUSH string "Get-item:74"; # string : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @some : @parameter%transferFrom : @storage
                SENDER;     # address : @some : @parameter%transferFrom : @storage
                COMPARE;    # int : @parameter%transferFrom : @storage
                EQ;         # bool : @parameter%transferFrom : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.tokenApprovals[params.token_id]"; # string : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%transferFrom : @storage
                # self.data.tokenHolderToID[params.f].remove(params.token_id) # @parameter%transferFrom : @storage
                SWAP;       # @storage : @parameter%transferFrom
                DUP;        # @storage : @storage : @parameter%transferFrom
                DUG 2;      # @storage : @parameter%transferFrom : @storage
                DUP;        # @storage : @storage : @parameter%transferFrom : @storage
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage : @parameter%transferFrom : @storage
                SWAP;       # @storage : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CDR;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DUP;        # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SWAP;       # pair (pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CAR;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DUP;        # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CAR;        # big_map string address : pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SWAP;       # pair (big_map %tokenApprovals string address) (big_map %tokenHolderToID address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DUP;        # big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DIG 5;      # @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUG 6;      # @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CAR;        # address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DUP;        # address : address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                GET;        # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                IF_SOME
                  {
                    # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                  }
                  {
                    PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                    FAILWITH;   # FAILED
                  }; # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                PUSH bool False; # bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                DIG 7;      # @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @storage
                DUG 8;      # @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                CDDR;       # string : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                UPDATE;     # set string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SOME;       # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SWAP;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : @storage
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transferFrom : @storage
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : @storage
                DUG 2;      # @parameter%transferFrom : @storage : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # @storage : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # if ~ (self.data.ownerToBalance.contains(params.t)): # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CADAR;      # big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # @parameter%transferFrom : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transferFrom : big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDAR;       # address : big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                MEM;        # bool : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                IF
                  {}
                  {
                    # self.data.tokenHolderToID[params.t] = sp.set([]) # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                    DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CAR;        # big_map string address : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (big_map string address) (big_map address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DIG 5;      # @parameter%transferFrom : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUP;        # @parameter%transferFrom : @parameter%transferFrom : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUG 6;      # @parameter%transferFrom : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    CDAR;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                  }; # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # self.data.tokenHolderToID[params.t].add(params.token_id) # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # big_map string address : pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map string address) (big_map address (set string)) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 5;      # @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 6;      # @parameter%transferFrom : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDAR;       # address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # address : address : big_map address (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                GET;        # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                IF_SOME
                  {
                    # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                  }
                  {
                    PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                    FAILWITH;   # FAILED
                  }; # @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PUSH bool True; # bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 7;      # @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 8;      # @parameter%transferFrom : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDDR;       # string : bool : @some : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # set string : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SOME;       # option (set string) : address : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # address : option (set string) : big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # big_map address (set string) : big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # big_map string address : big_map address (set string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (big_map string address) (big_map address (set string)) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                # self.data.tokenIdToOwner[params.token_id] = params.t # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # pair (big_map string address) (big_map address (set string)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDR;        # set string : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CAR;        # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 4;      # @parameter%transferFrom : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 5;      # @parameter%transferFrom : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDAR;       # address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SOME;       # option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DIG 5;      # @parameter%transferFrom : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 6;      # @parameter%transferFrom : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                CDDR;       # string : option address : big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                UPDATE;     # big_map string address : set string : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (big_map string address) (set string) : pair (big_map string address) (big_map address (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (big_map string address) (big_map address (set string)) : pair (big_map string address) (set string) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
                DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # self.data.ownerToBalance[params.f] -= 1 # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol)) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map %ownerToBalance address int) (string %symbol) : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # string : pair (big_map %ownerToBalance address int) (string %symbol) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map %ownerToBalance address int) (string %symbol) : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PUSH int 1; # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom
                DUG 7;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 7;      # @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                GET;        # option int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF_SOME
                  {
                    # of_some: Get-item:76 # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }
                  {
                    PUSH string "Get-item:76"; # string : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    FAILWITH;   # FAILED
                  }; # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SUB;        # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SOME;       # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 5;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 6;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # if ~ (self.data.ownerToBalance.contains(params.t)): # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # @parameter%transferFrom : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address int : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transferFrom : big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDAR;       # address : big_map address int : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                MEM;        # bool : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF
                  {}
                  {
                    # self.data.ownerToBalance[params.t] = 0 # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                    DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # pair (big_map address int) string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDR;        # string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (big_map address int) string : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PUSH (option int) (Some 0); # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DIG 5;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUP;        # @parameter%transferFrom : @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUG 6;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    CDAR;       # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    DROP;       # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }; # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                # self.data.ownerToBalance[params.t] += 1 # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom
                DUG 2;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # pair (address %admin) (string %name) : pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # pair (big_map address int) string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDR;        # string : pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (big_map address int) string : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CAR;        # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PUSH int 1; # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom
                DUP;        # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom
                DUG 7;      # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CADAR;      # big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 6;      # @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 7;      # @parameter%transferFrom : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDAR;       # address : big_map address int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                GET;        # option int : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                IF_SOME
                  {
                    # of_some: Get-item:80 # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                  }
                  {
                    PUSH string "Get-item:80"; # string : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                    FAILWITH;   # FAILED
                  }; # @some : int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                ADD;        # int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SOME;       # option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DIG 5;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUP;        # @parameter%transferFrom : @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 6;      # @parameter%transferFrom : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                CDAR;       # address : option int : big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                UPDATE;     # big_map address int : string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (big_map address int) string : pair (address %admin) (string %name) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                SWAP;       # pair (address %admin) (string %name) : pair (big_map address int) string : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (address %admin) (string %name)) (pair (big_map address int) string) : pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                PAIR;       # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DUG 2;      # @parameter%transferFrom : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string))) : pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
                DROP 2;     # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
              }; # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
          }; # pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) string)) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map string address) (set string)))
      }; # pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
    NIL operation; # list operation : pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))
    PAIR;       # pair (list operation) (pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))))
  } # pair (list operation) (pair (pair (pair (address %admin) (string %name)) (pair (big_map %ownerToBalance address int) (string %symbol))) (pair (pair (big_map string address) (big_map address (set string))) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))));