[
{"prim":"storage","args":[
 {"prim":"pair","args":[
  {"prim":"pair","args":[
   {"prim":"pair","args":[
    {"prim":"pair","args":[
     {"prim":"pair","args":[
      {"prim":"pair","args":[
       {"prim":"pair","args":[
        {"prim":"address","annots":["%admin"]},{"prim":"string","annots":["%name"]}]
       },
       {"prim":"big_map","args":[
        {"prim":"address"},{"prim":"int"}]
       ,"annots":["%ownerToBalance"]}]
      },{"prim":"string","annots":["%symbol"]}]
     },
     {"prim":"big_map","args":[
      {"prim":"string"},{"prim":"address"}]
     ,"annots":["%tokenApprovals"]}]
    },
    {"prim":"big_map","args":[
     {"prim":"address"},
     {"prim":"set","args":[
      {"prim":"string"}]
     }]
    ,"annots":["%tokenHolderToID"]}]
   },
   {"prim":"big_map","args":[
    {"prim":"string"},{"prim":"address"}]
   ,"annots":["%tokenIdToOwner"]}]
  },
  {"prim":"set","args":[
   {"prim":"string"}]
  ,"annots":["%tokensMinted"]}]
 }]
},
{"prim":"parameter","args":[
 {"prim":"or","args":[
  {"prim":"or","args":[
   {"prim":"or","args":[
    {"prim":"or","args":[
     {"prim":"pair","args":[
      {"prim":"address","annots":["%approve_to"]},{"prim":"string","annots":["%token_id"]}]
     ,"annots":["%approve"]},{"prim":"string","annots":["%burnDataToken"]}]
    },
    {"prim":"pair","args":[
     {"prim":"address","annots":["%address"]},{"prim":"string","annots":["%token_id"]}]
    ,"annots":["%mintDataToken"]}]
   },
   {"prim":"pair","args":[
    {"prim":"address","annots":["%to"]},{"prim":"string","annots":["%token_id"]}]
   ,"annots":["%transfer"]}]
  },
  {"prim":"pair","args":[
   {"prim":"pair","args":[
    {"prim":"address","annots":["%f"]},{"prim":"address","annots":["%t"]}]
   },{"prim":"string","annots":["%token_id"]}]
  ,"annots":["%transferFrom"]}]
 }]
},
{"prim":"code","args":[
 [{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},
 {"prim":"ERROR","args":[
  {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map address (set string))) (big_map string address)) (set string)\n  Input stack  : or (or (or (or (pair %approve (address %approve_to) (string %token_id)) (string @token_id)) (pair %mintDataToken (address %address) (string %token_id))) (pair %transfer (address %to) (string %token_id))) (pair %transferFrom (pair (address %f) (address %t)) (string %token_id)){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : (MIif_left (\n   (MIseq\n      [(MIerror\n          \"Compiler error:\\n  Message      : UPDATE on option\n"}]
 },
 {"prim":"IF_LEFT","args":[
  [[
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map address (set string))) (big_map string address)) (set string)\n  Input stack  : or (or (or (pair %approve (address %approve_to) (string %token_id)) (string @token_id)) (pair %mintDataToken (address %address) (string %token_id))) (pair %transfer (address %to) (string %token_id)){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : (MIif_left (\n   (MIseq\n      [(MIerror\n          \"Compiler error:\\n  Message      : UPDATE on option\n"}]
  },
  {"prim":"IF_LEFT","args":[
   [[
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map address (set string))) (big_map string address)) (set string)\n  Input stack  : or (or (pair %approve (address %approve_to) (string %token_id)) (string @token_id)) (pair %mintDataToken (address %address) (string %token_id)){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : (MIif_left (\n   (MIif_left (\n      (MIseq\n         [(MIcomment \"Entry point: approve\");\n           (\n"}]
   },
   {"prim":"IF_LEFT","args":[
    [
    {"prim":"IF_LEFT","args":[
     [[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},
     {"prim":"IF","args":[
      [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: self.data.tokensMinted.contains(params.token_id)"}]},{"prim":"FAILWITH"}]]]
     },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"GET"},
     {"prim":"IF_NONE","args":[
      [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Get-item:65"}]},{"prim":"FAILWITH"}]],[]]
     },{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},
     {"prim":"IF","args":[
      [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: sp.sender == self.data.tokenIdToOwner[params.token_id]"}]},{"prim":"FAILWITH"}]]]
     },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"6"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"7"}]},{"prim":"CDR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DROP"},{"prim":"DROP"}]],[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},
     {"prim":"IF","args":[
      [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: sp.sender == self.data.admin"}]},{"prim":"FAILWITH"}]]]
     },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"MEM"},
     {"prim":"IF","args":[
      [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: self.data.tokensMinted.contains(params.token_id)"}]},{"prim":"FAILWITH"}]]]
     },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"False"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DROP"},{"prim":"DROP"}]]]
    }],[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},
    {"prim":"IF","args":[
     [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: sp.sender == self.data.admin"}]},{"prim":"FAILWITH"}]]]
    },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},
    {"prim":"IF","args":[
     [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))"}]},{"prim":"FAILWITH"}]],[[]]]
    },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"True"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"CDR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"MEM"},
    {"prim":"IF","args":[
     [[]],[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[
     {"prim":"option","args":[
      {"prim":"set","args":[
       {"prim":"string"}]
      }]
     },
     {"prim":"Some","args":[
      []]
     }]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"}]]]
    },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},
    {"prim":"IF_NONE","args":[
     [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"set_in_top-nil-some"}]},{"prim":"FAILWITH"}]],[]]
    },{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"True"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},{"prim":"CDR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"SOME"},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Input stack  : option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : MIupdate\n"}]
    },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},
    {"prim":"ERROR","args":[
     {"string":"set_in_top: cannot find 'tokenIdToOwner' in '(pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))' "}]
    },{"prim":"DUG","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
    },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"CAR"},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : MEM on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MImem\n"}]
    },{"prim":"MEM"},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : NOT on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MInot\n"}]
    },{"prim":"NOT"},
    {"prim":"ERROR","args":[
     {"string":"mi_if"}]
    },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"1"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
    },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"11"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"12"}]},{"prim":"CAR"},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : GET on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIget\n"}]
    },{"prim":"GET"},
    {"prim":"ERROR","args":[
     {"string":"mi_if_some"}]
    },
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : ADD on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIadd\n"}]
    },{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"12"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"13"}]},{"prim":"CAR"},
    {"prim":"ERROR","args":[
     {"string":"Compiler error:\n  Message      : UPDATE on address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %mintDataToken (address %address) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIupdate\n"}]
    },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"8"}]},{"prim":"DROP"}]]]
   },
   {"prim":"ERROR","args":[
    {"string":"Cannot unify branches [pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}] [pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}]"}]
   }]],[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},
   {"prim":"IF","args":[
    [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: self.data.tokensMinted.contains(params.token_id)"}]},{"prim":"FAILWITH"}]]]
   },{"prim":"SENDER"},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"3"}]},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"3"}]},{"prim":"CDR"},{"prim":"GET"},
   {"prim":"IF_NONE","args":[
    [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Get-item:57"}]},{"prim":"FAILWITH"}]],[]]
   },{"prim":"COMPARE"},{"prim":"EQ"},
   {"prim":"IF","args":[
    [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: self.data.tokenIdToOwner[params.token_id] == sp.sender"}]},{"prim":"FAILWITH"}]]]
   },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"SENDER"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},
   {"prim":"IF_NONE","args":[
    [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"set_in_top-nil-some"}]},{"prim":"FAILWITH"}]],[]]
   },{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"False"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},{"prim":"CDR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"SOME"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Input stack  : option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : MIupdate\n"}]
   },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
   },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"CAR"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : MEM on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MImem\n"}]
   },{"prim":"MEM"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : NOT on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MInot\n"}]
   },{"prim":"NOT"},
   {"prim":"ERROR","args":[
    {"string":"mi_if"}]
   },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},
   {"prim":"ERROR","args":[
    {"string":"set_in_top: cannot find 'tokenHolderToID' in '(pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))' "}]
   },{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},
   {"prim":"ERROR","args":[
    {"string":"set_in_top: cannot find 'tokenIdToOwner' in '(pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))' "}]
   },{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"1"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
   },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SENDER"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : GET on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIget\n"}]
   },{"prim":"GET"},
   {"prim":"ERROR","args":[
    {"string":"mi_if_some"}]
   },
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : SUB on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIsub\n"}]
   },{"prim":"SUB"},{"prim":"SOME"},{"prim":"SENDER"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : UPDATE on address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIupdate\n"}]
   },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : CAAAAADR on pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
   },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"9"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"10"}]},{"prim":"CAR"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : MEM on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MImem\n"}]
   },{"prim":"MEM"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : NOT on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MInot\n"}]
   },{"prim":"NOT"},
   {"prim":"ERROR","args":[
    {"string":"mi_if"}]
   },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"1"}]},{"prim":"DIG","args":[{"int":"10"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"11"}]},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : CAAAAADR on pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
   },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"20"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"21"}]},{"prim":"CAR"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : GET on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIget\n"}]
   },{"prim":"GET"},
   {"prim":"ERROR","args":[
    {"string":"mi_if_some"}]
   },
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : ADD on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIadd\n"}]
   },{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"21"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"22"}]},{"prim":"CAR"},
   {"prim":"ERROR","args":[
    {"string":"Compiler error:\n  Message      : UPDATE on address.option address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.option address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transfer (address %to) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIupdate\n"}]
   },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"14"}]},{"prim":"DROP"}]]]
  },
  {"prim":"ERROR","args":[
   {"string":"Cannot unify branches [or (or (pair %approve (address %approve_to) (string %token_id)) (string @token_id)) (pair %mintDataToken (address %address) (string %token_id)){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}] [pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map string address) (pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) (pair (pair (pair (option address) address) (pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int))) int))) string){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}]"}]
  }]],[[{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"MEM"},
  {"prim":"IF","args":[
   [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: self.data.tokensMinted.contains(params.token_id)"}]},{"prim":"FAILWITH"}]]]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"GET"},
  {"prim":"IF_NONE","args":[
   [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Get-item:74"}]},{"prim":"FAILWITH"}]],[]]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"COMPARE"},{"prim":"EQ"},
  {"prim":"IF","args":[
   [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: params.f == self.data.tokenIdToOwner[params.token_id]"}]},{"prim":"FAILWITH"}]]]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"CDR"},{"prim":"GET"},
  {"prim":"IF_NONE","args":[
   [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"Get-item:74"}]},{"prim":"FAILWITH"}]],[]]
  },{"prim":"SENDER"},{"prim":"COMPARE"},{"prim":"EQ"},
  {"prim":"IF","args":[
   [[]],[[{"prim":"PUSH","args":[{"prim":"string"},{"string":"WrongCondition: sp.sender == self.data.tokenApprovals[params.token_id]"}]},{"prim":"FAILWITH"}]]]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"CAR"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"GET"},
  {"prim":"IF_NONE","args":[
   [[{"prim":"PUSH","args":[{"prim":"string"},{"string":"set_in_top-nil-some"}]},{"prim":"FAILWITH"}]],[]]
  },{"prim":"PUSH","args":[{"prim":"bool"},{"prim":"False"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},{"prim":"CDR"},{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"SOME"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : UPDATE on option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Input stack  : option address.set string.big_map address (set string).pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address).big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}\n  Instruction  : MIupdate\n"}]
  },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
  },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"3"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"4"}]},{"prim":"CAR"},{"prim":"CDR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : MEM on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MImem\n"}]
  },{"prim":"MEM"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : NOT on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MInot\n"}]
  },{"prim":"NOT"},
  {"prim":"ERROR","args":[
   {"string":"mi_if"}]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},
  {"prim":"ERROR","args":[
   {"string":"set_in_top: cannot find 'tokenHolderToID' in '(pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))' "}]
  },{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},
  {"prim":"ERROR","args":[
   {"string":"set_in_top: cannot find 'tokenIdToOwner' in '(pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))' "}]
  },{"prim":"DUG","args":[{"int":"2"}]},{"prim":"SWAP"},{"prim":"DROP"},{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"1"}]},{"prim":"DIG","args":[{"int":"7"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"8"}]},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : CAAAAADR on pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
  },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"11"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"12"}]},{"prim":"CAR"},{"prim":"CAR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : GET on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIget\n"}]
  },{"prim":"GET"},
  {"prim":"ERROR","args":[
   {"string":"mi_if_some"}]
  },
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : SUB on address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIsub\n"}]
  },{"prim":"SUB"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"12"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"13"}]},{"prim":"CAR"},{"prim":"CAR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : UPDATE on address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.option address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIupdate\n"}]
  },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"6"}]},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : CAAAAADR on pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
  },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"9"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"10"}]},{"prim":"CAR"},{"prim":"CDR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : MEM on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MImem\n"}]
  },{"prim":"MEM"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : NOT on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MInot\n"}]
  },{"prim":"NOT"},
  {"prim":"ERROR","args":[
   {"string":"mi_if"}]
  },{"prim":"SWAP"},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"2"}]},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CDR"},{"prim":"SWAP"},{"prim":"CAR"},{"prim":"DUP"},{"prim":"CAR"},{"prim":"SWAP"},{"prim":"CDR"},{"prim":"PUSH","args":[{"prim":"int"},{"int":"1"}]},{"prim":"DIG","args":[{"int":"10"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"11"}]},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : CAAAAADR on pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : (MIfield [A; A; A; A; A; D])\n"}]
  },{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CAR"},{"prim":"CDR"},{"prim":"DIG","args":[{"int":"20"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"21"}]},{"prim":"CAR"},{"prim":"CDR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : GET on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIget\n"}]
  },{"prim":"GET"},
  {"prim":"ERROR","args":[
   {"string":"mi_if_some"}]
  },
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : ADD on address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIadd\n"}]
  },{"prim":"ADD"},{"prim":"SOME"},{"prim":"DIG","args":[{"int":"21"}]},{"prim":"DUP"},{"prim":"DUG","args":[{"int":"22"}]},{"prim":"CAR"},{"prim":"CDR"},
  {"prim":"ERROR","args":[
   {"string":"Compiler error:\n  Message      : UPDATE on address.option address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Input stack  : address.option address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.int.big_map address int.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair %transferFrom (pair (address %f) (address %t)) (string %token_id){params}.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}\n  Instruction  : MIupdate\n"}]
  },{"prim":"UPDATE"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"PAIR"},{"prim":"SWAP"},{"prim":"PAIR"},{"prim":"DUG","args":[{"int":"6"}]},{"prim":"DIG","args":[{"int":"5"}]},{"prim":"DROP"},{"prim":"DIG","args":[{"int":"14"}]},{"prim":"DROP"}]]]
 },
 {"prim":"ERROR","args":[
  {"string":"Cannot unify branches [or (or (or (pair %approve (address %approve_to) (string %token_id)) (string @token_id)) (pair %mintDataToken (address %address) (string %token_id))) (pair %transfer (address %to) (string %token_id)){params}.pair (pair (pair (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)) (big_map %tokenHolderToID address (set string))) (big_map %tokenIdToOwner string address)) (set %tokensMinted string){storage}] [pair (pair (set string) (option address)) (big_map address (set string)).pair (option address) address.int.big_map address int.address.pair (big_map string address) (pair (pair (pair (address %admin) (string %name)) (pair (big_map address int) (pair (pair (pair (option address) address) (pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int))) int))) string){storage}.pair (address %admin) (string %name).string.big_map string address.pair (pair (set string) (option address)) (big_map address (set string)).address.pair (big_map address int) (pair (pair (pair (option address) address) (pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)))) int){storage}.big_map string address.set string.pair (pair (pair (set string) (option address)) (big_map address (set string))) (pair (pair (pair (pair (address %admin) (string %name)) (big_map %ownerToBalance address int)) (string %symbol)) (big_map %tokenApprovals string address)){storage}]"}]
 },
 {"prim":"ERROR","args":[
  {"string":"finalize"}]
 }]]
}]